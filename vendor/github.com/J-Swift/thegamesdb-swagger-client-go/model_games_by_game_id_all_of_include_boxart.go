/*
TheGamesDB API

API Documentation

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gamesdb

import (
	"encoding/json"
)

// GamesByGameIDAllOfIncludeBoxart struct for GamesByGameIDAllOfIncludeBoxart
type GamesByGameIDAllOfIncludeBoxart struct {
	BaseUrl ImageBaseUrlMeta       `json:"base_url"`
	Data    map[string][]GameImage `json:"data"`
}

// NewGamesByGameIDAllOfIncludeBoxart instantiates a new GamesByGameIDAllOfIncludeBoxart object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGamesByGameIDAllOfIncludeBoxart(baseUrl ImageBaseUrlMeta, data map[string][]GameImage) *GamesByGameIDAllOfIncludeBoxart {
	this := GamesByGameIDAllOfIncludeBoxart{}
	this.BaseUrl = baseUrl
	this.Data = data
	return &this
}

// NewGamesByGameIDAllOfIncludeBoxartWithDefaults instantiates a new GamesByGameIDAllOfIncludeBoxart object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGamesByGameIDAllOfIncludeBoxartWithDefaults() *GamesByGameIDAllOfIncludeBoxart {
	this := GamesByGameIDAllOfIncludeBoxart{}
	return &this
}

// GetBaseUrl returns the BaseUrl field value
func (o *GamesByGameIDAllOfIncludeBoxart) GetBaseUrl() ImageBaseUrlMeta {
	if o == nil {
		var ret ImageBaseUrlMeta
		return ret
	}

	return o.BaseUrl
}

// GetBaseUrlOk returns a tuple with the BaseUrl field value
// and a boolean to check if the value has been set.
func (o *GamesByGameIDAllOfIncludeBoxart) GetBaseUrlOk() (*ImageBaseUrlMeta, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BaseUrl, true
}

// SetBaseUrl sets field value
func (o *GamesByGameIDAllOfIncludeBoxart) SetBaseUrl(v ImageBaseUrlMeta) {
	o.BaseUrl = v
}

// GetData returns the Data field value
func (o *GamesByGameIDAllOfIncludeBoxart) GetData() map[string][]GameImage {
	if o == nil {
		var ret map[string][]GameImage
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *GamesByGameIDAllOfIncludeBoxart) GetDataOk() (*map[string][]GameImage, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *GamesByGameIDAllOfIncludeBoxart) SetData(v map[string][]GameImage) {
	o.Data = v
}

func (o GamesByGameIDAllOfIncludeBoxart) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["base_url"] = o.BaseUrl
	}
	if true {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableGamesByGameIDAllOfIncludeBoxart struct {
	value *GamesByGameIDAllOfIncludeBoxart
	isSet bool
}

func (v NullableGamesByGameIDAllOfIncludeBoxart) Get() *GamesByGameIDAllOfIncludeBoxart {
	return v.value
}

func (v *NullableGamesByGameIDAllOfIncludeBoxart) Set(val *GamesByGameIDAllOfIncludeBoxart) {
	v.value = val
	v.isSet = true
}

func (v NullableGamesByGameIDAllOfIncludeBoxart) IsSet() bool {
	return v.isSet
}

func (v *NullableGamesByGameIDAllOfIncludeBoxart) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGamesByGameIDAllOfIncludeBoxart(val *GamesByGameIDAllOfIncludeBoxart) *NullableGamesByGameIDAllOfIncludeBoxart {
	return &NullableGamesByGameIDAllOfIncludeBoxart{value: val, isSet: true}
}

func (v NullableGamesByGameIDAllOfIncludeBoxart) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGamesByGameIDAllOfIncludeBoxart) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
