/*
TheGamesDB API

API Documentation

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gamesdb

import (
	"encoding/json"
)

// GamesByGameIDV1AllOfInclude struct for GamesByGameIDV1AllOfInclude
type GamesByGameIDV1AllOfInclude struct {
	Boxart   GamesByGameIDAllOfIncludeBoxart `json:"boxart"`
	Platform map[string]PlatformSkinny       `json:"platform"`
}

// NewGamesByGameIDV1AllOfInclude instantiates a new GamesByGameIDV1AllOfInclude object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGamesByGameIDV1AllOfInclude(boxart GamesByGameIDAllOfIncludeBoxart, platform map[string]PlatformSkinny) *GamesByGameIDV1AllOfInclude {
	this := GamesByGameIDV1AllOfInclude{}
	this.Boxart = boxart
	this.Platform = platform
	return &this
}

// NewGamesByGameIDV1AllOfIncludeWithDefaults instantiates a new GamesByGameIDV1AllOfInclude object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGamesByGameIDV1AllOfIncludeWithDefaults() *GamesByGameIDV1AllOfInclude {
	this := GamesByGameIDV1AllOfInclude{}
	return &this
}

// GetBoxart returns the Boxart field value
func (o *GamesByGameIDV1AllOfInclude) GetBoxart() GamesByGameIDAllOfIncludeBoxart {
	if o == nil {
		var ret GamesByGameIDAllOfIncludeBoxart
		return ret
	}

	return o.Boxart
}

// GetBoxartOk returns a tuple with the Boxart field value
// and a boolean to check if the value has been set.
func (o *GamesByGameIDV1AllOfInclude) GetBoxartOk() (*GamesByGameIDAllOfIncludeBoxart, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Boxart, true
}

// SetBoxart sets field value
func (o *GamesByGameIDV1AllOfInclude) SetBoxart(v GamesByGameIDAllOfIncludeBoxart) {
	o.Boxart = v
}

// GetPlatform returns the Platform field value
func (o *GamesByGameIDV1AllOfInclude) GetPlatform() map[string]PlatformSkinny {
	if o == nil {
		var ret map[string]PlatformSkinny
		return ret
	}

	return o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value
// and a boolean to check if the value has been set.
func (o *GamesByGameIDV1AllOfInclude) GetPlatformOk() (*map[string]PlatformSkinny, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Platform, true
}

// SetPlatform sets field value
func (o *GamesByGameIDV1AllOfInclude) SetPlatform(v map[string]PlatformSkinny) {
	o.Platform = v
}

func (o GamesByGameIDV1AllOfInclude) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["boxart"] = o.Boxart
	}
	if true {
		toSerialize["platform"] = o.Platform
	}
	return json.Marshal(toSerialize)
}

type NullableGamesByGameIDV1AllOfInclude struct {
	value *GamesByGameIDV1AllOfInclude
	isSet bool
}

func (v NullableGamesByGameIDV1AllOfInclude) Get() *GamesByGameIDV1AllOfInclude {
	return v.value
}

func (v *NullableGamesByGameIDV1AllOfInclude) Set(val *GamesByGameIDV1AllOfInclude) {
	v.value = val
	v.isSet = true
}

func (v NullableGamesByGameIDV1AllOfInclude) IsSet() bool {
	return v.isSet
}

func (v *NullableGamesByGameIDV1AllOfInclude) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGamesByGameIDV1AllOfInclude(val *GamesByGameIDV1AllOfInclude) *NullableGamesByGameIDV1AllOfInclude {
	return &NullableGamesByGameIDV1AllOfInclude{value: val, isSet: true}
}

func (v NullableGamesByGameIDV1AllOfInclude) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGamesByGameIDV1AllOfInclude) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
