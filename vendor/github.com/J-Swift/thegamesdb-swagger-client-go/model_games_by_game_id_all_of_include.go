/*
TheGamesDB API

API Documentation

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gamesdb

import (
	"encoding/json"
)

// GamesByGameIDAllOfInclude struct for GamesByGameIDAllOfInclude
type GamesByGameIDAllOfInclude struct {
	Boxart   GamesByGameIDAllOfIncludeBoxart   `json:"boxart"`
	Platform GamesByGameIDAllOfIncludePlatform `json:"platform"`
}

// NewGamesByGameIDAllOfInclude instantiates a new GamesByGameIDAllOfInclude object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGamesByGameIDAllOfInclude(boxart GamesByGameIDAllOfIncludeBoxart, platform GamesByGameIDAllOfIncludePlatform) *GamesByGameIDAllOfInclude {
	this := GamesByGameIDAllOfInclude{}
	this.Boxart = boxart
	this.Platform = platform
	return &this
}

// NewGamesByGameIDAllOfIncludeWithDefaults instantiates a new GamesByGameIDAllOfInclude object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGamesByGameIDAllOfIncludeWithDefaults() *GamesByGameIDAllOfInclude {
	this := GamesByGameIDAllOfInclude{}
	return &this
}

// GetBoxart returns the Boxart field value
func (o *GamesByGameIDAllOfInclude) GetBoxart() GamesByGameIDAllOfIncludeBoxart {
	if o == nil {
		var ret GamesByGameIDAllOfIncludeBoxart
		return ret
	}

	return o.Boxart
}

// GetBoxartOk returns a tuple with the Boxart field value
// and a boolean to check if the value has been set.
func (o *GamesByGameIDAllOfInclude) GetBoxartOk() (*GamesByGameIDAllOfIncludeBoxart, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Boxart, true
}

// SetBoxart sets field value
func (o *GamesByGameIDAllOfInclude) SetBoxart(v GamesByGameIDAllOfIncludeBoxart) {
	o.Boxart = v
}

// GetPlatform returns the Platform field value
func (o *GamesByGameIDAllOfInclude) GetPlatform() GamesByGameIDAllOfIncludePlatform {
	if o == nil {
		var ret GamesByGameIDAllOfIncludePlatform
		return ret
	}

	return o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value
// and a boolean to check if the value has been set.
func (o *GamesByGameIDAllOfInclude) GetPlatformOk() (*GamesByGameIDAllOfIncludePlatform, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Platform, true
}

// SetPlatform sets field value
func (o *GamesByGameIDAllOfInclude) SetPlatform(v GamesByGameIDAllOfIncludePlatform) {
	o.Platform = v
}

func (o GamesByGameIDAllOfInclude) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["boxart"] = o.Boxart
	}
	if true {
		toSerialize["platform"] = o.Platform
	}
	return json.Marshal(toSerialize)
}

type NullableGamesByGameIDAllOfInclude struct {
	value *GamesByGameIDAllOfInclude
	isSet bool
}

func (v NullableGamesByGameIDAllOfInclude) Get() *GamesByGameIDAllOfInclude {
	return v.value
}

func (v *NullableGamesByGameIDAllOfInclude) Set(val *GamesByGameIDAllOfInclude) {
	v.value = val
	v.isSet = true
}

func (v NullableGamesByGameIDAllOfInclude) IsSet() bool {
	return v.isSet
}

func (v *NullableGamesByGameIDAllOfInclude) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGamesByGameIDAllOfInclude(val *GamesByGameIDAllOfInclude) *NullableGamesByGameIDAllOfInclude {
	return &NullableGamesByGameIDAllOfInclude{value: val, isSet: true}
}

func (v NullableGamesByGameIDAllOfInclude) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGamesByGameIDAllOfInclude) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
